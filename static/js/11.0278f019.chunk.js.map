{"version":3,"sources":["models/app.js","utils/string.js","models/article.js","utils/math.js","utils/getInitials.js","components/SectorFilter.js","views/pages/Analysis/SentimentsView/Header.js","views/pages/Analysis/SentimentsView/Filter/MultiSelect.js","views/pages/Analysis/SentimentsView/Filter/index.js","components/ProjectCard.js","components/ArticleCard.js","components/ArticleCardSkeleton.js","views/pages/Analysis/SentimentsView/ArticlesList.js","views/pages/Analysis/SentimentsView/index.js"],"names":["KeyLabelPair","label","key","data","this","trimEllpsis","word","length","substring","ArticleTitle","href","text","isNull","ArticleKeywordsSentiments","score","ArticleKeywords","sentiment","relevance","count","setDataFromDB","toJSON","ArticleMetadata","datetime","source","query","ArticleScore","value","terms","sector","color","setData","Article","_id","title","resume","metadata","keywords","Array","isArray","forEach","keyword","articleKeywords","push","header","article","sentiments","map","ArticleGraph","colors","labels","isUndefined","datasets","d","toFixed","backgroundColor","name","replace","split","slice","v","toUpperCase","join","sectorsList","useStyles","makeStyles","theme","root","actionIcon","marginRight","spacing","SectorFilter","className","dispatch","useDispatch","classes","actionRef","useRef","useSelector","state","analysis","useState","isMenuOpen","setMenuOpen","useEffect","setSector","handleSectorChange","a","Fragment","ref","onClick","fontSize","anchorEl","current","onClose","open","PaperProps","menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","t","Header","rest","Grid","alignItems","container","justify","clsx","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","menuItem","padding","formControlLabel","width","margin","searchInput","marginLeft","chip","Filter","media","height","palette","background","dark","likedButton","red","subscribersIcon","ProjectCard","tooltip","overflow","textOverflow","ArticleCard","Card","Box","p","display","mt","ml","target","pb","px","py","Divider","pl","pr","SvgIcon","flexGrow","IconButton","skeleton","ArticleCardSkeleton","Skeleton","animation","position","bottom","left","content","primary","main","sortButton","textTransform","letterSpacing","Results","articles","keys","mode","setMode","setCount","articlesPiece","setArticlesPiece","Math","round","justifyContent","flexWrap","mb","ToggleButtonGroup","exclusive","onChange","event","size","ToggleButton","md","sm","xs","sk","index","Pagination","finalIndex","minHeight","paddingTop","paddingBottom","AnalysisSentimentsView","setArticles","axios","get","response","news","art","toListItem","console","error","status","headers","fetchData","Page","Container","maxWidth","ArticlesList"],"mappings":"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","file":"static/js/11.0278f019.chunk.js","sourcesContent":["export const CURRENCY ='R$'\n\nexport class KeyLabelPair{\n  label = ''\n  key = ''\n  constructor(){\n\n  }\n  setData(data){\n    if(data){\n      if(data.label) this.label = data.label\n      if(data.key) this.key = data.key\n    }\n  }\n  toJSON(){\n    let obj = {\n      key: this.key,\n      label: this.label\n    }\n    return obj\n  }\n}\n","export const trimEllpsis = (word,length) => {\n  return word.length > length ? word.substring(0, length) + \"...\" : word;\n}\n","import { isNull, isUndefined } from \"lodash\"\nimport { numberToFixed } from \"src/utils/math\"\nimport { trimEllpsis } from \"src/utils/string\"\nimport { KeyLabelPair } from \"./app\"\n\nclass ArticleTitle {\n  href = ''\n  text = ''\n  constructor() {\n\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.href)) this.href = data.href\n      if (!isNull(data.text)) this.text = data.text\n    }\n  }\n  toJSON() {\n    let obj = {\n      href: this.href,\n      text: this.text\n    }\n    return obj\n  }\n}\nclass ArticleKeywordsSentiments {\n  score = ''\n  label = ''\n  constructor() {\n\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.score)) this.score = data.score\n      if (!isNull(data.label)) this.label = data.label\n    }\n  }\n  toJSON() {\n    let obj = {\n      score: this.score,\n      label: this.label\n    }\n    return obj\n  }\n}\nclass ArticleKeywords {\n  sentiment = new ArticleKeywordsSentiments()\n  text = ''\n  relevance = 0\n  count = 0\n  constructor() {\n\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.sentiment)) this.sentiment.setDataFromDB(data.sentiment)\n      if (!isNull(data.text)) this.text = data.text\n      if (!isNull(data.relevance)) this.relevance = data.relevance\n      if (!isNull(data.count)) this.count = data.count\n    }\n  }\n  toJSON() {\n    let obj = {\n      sentiment: this.sentiment.toJSON(),\n      text: this.text,\n      relevance: this.relevance,\n      count: this.count\n    }\n    return obj\n  }\n\n}\nclass ArticleMetadata {\n  datetime = ''\n  source = ''\n  query = ''\n  constructor() {\n\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.datetime)) this.datetime = data.datetime\n      if (!isNull(data.source)) this.source = data.source\n      if (!isNull(data.query)) this.query = data.query\n    }\n  }\n  toJSON() {\n    let obj = {\n      datetime: this.datetime,\n      source: this.source,\n      query: this.query,\n    }\n    return obj\n  }\n}\n\nclass ArticleScore {\n  value = -2\n  label = 'Não analisado'\n  terms = []\n  sector = new KeyLabelPair()\n  color = 'action'\n  constructor() {\n    this.sector.setData({\n      key: 'bank',\n      label: 'Bancário'\n    })\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.value)) {\n        this.value = data.value\n        switch (this.value) {\n          case -2:\n            this.color = 'action'\n            break;\n          case -1:\n            this.color = 'error'\n            break;\n          case 0:\n            this.color = 'secondary'\n            break;\n          case 1:\n            this.color = 'success'\n            break;\n        }\n      }\n      if (!isNull(data.label)) this.label = data.label\n      if (!isNull(data.terms)) this.terms = data.terms\n    }\n  }\n  toJSON() {\n    let obj = {\n      value: this.value,\n      label: this.label,\n      terms: this.terms,\n      sector: this.sector.toJSON(),\n      color: this.color\n    }\n    return obj\n  }\n}\nexport class Article {\n  _id = ''\n  title = new ArticleTitle()\n  resume = ''\n  metadata = new ArticleMetadata()\n  score = new ArticleScore()\n  keywords = []\n  constructor() {\n\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data._id)) this._id = data._id\n      if (!isNull(data.resume)) this.resume = data.resume\n      if (!isNull(data.title)) this.title.setDataFromDB(data.title)\n      if (!isNull(data.metadata)) this.metadata.setDataFromDB(data.metadata)\n      if (!isNull(data.score)) this.score.setDataFromDB(data.score)\n      if (!isNull(data.keywords) && Array.isArray(data.keywords)) {\n        data.keywords.forEach((keyword) => {\n          let articleKeywords = new ArticleKeywords()\n          articleKeywords.setDataFromDB(keyword)\n          this.keywords.push(articleKeywords)\n        })\n      }\n    }\n  }\n\n  toListItem() {\n    let obj = {\n      _id: this._id,\n      title: this.title.toJSON(),\n      metadata: this.metadata.toJSON(),\n      resume: this.resume,\n      score: this.score.toJSON(),\n    }\n    return obj\n  }\n  toPreview() {\n    let obj = {\n      _id: this._id,\n      title: this.title.toJSON(),\n      metadata: this.metadata.toJSON(),\n      resume: this.resume,\n      score: this.score.toJSON(),\n    }\n    return obj\n  }\n  toDetail() {\n    let obj = {\n      header: {\n        title: trimEllpsis(this.title.text, 30),\n        score: this.score.toJSON()\n      },\n      article: {\n        title: this.title.toJSON(),\n        resume: this.resume\n      },\n      sentiments: {\n        title: this.title.toJSON(),\n        score: this.score.toJSON()\n      },\n      keywords: this.keywords.map((keyword) => keyword.toJSON())\n    }\n    return obj\n  }\n  toDetailPreview() {\n\n  }\n\n}\nexport class ArticleGraph {\n  colors = []\n  data= []\n  labels = []\n  constructor() {\n  }\n  setDataFromDB(data) {\n    if(data){\n      if(!(isUndefined(data.labels) || isNull(data.labels)) ) this.labels = data.labels\n      if(!(isUndefined(data.data) || isNull(data.data))) this.data = data.data\n      if(!(isUndefined(data.colors) || isNull(data.colors))) this.colors = data.colors\n  }\n  }\n  toJSON() {\n    let obj = {\n      title: 'Sentimento da noticias',\n      datasets: [\n        {\n          data: this.data.map((d)=> numberToFixed(d)),\n          backgroundColor: this.colors,\n        }\n      ],\n      labels: this.labels\n    }\n    return obj\n  }\n}\n","export const numberToFixed = (number)=>{\n  return (number).toFixed(2)\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Database as DatabaseIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSector } from 'src/actions/analysisActions';\n\n\nconst sectorsList = [\n  {\n    key: 'bank',\n    label: 'Setor Bancário'\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction SectorFilter({ className, ...rest }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const { sector } = useSelector(state => state.analysis)\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSector(sectorsList[0]));\n  }, [dispatch]);\n\n  const handleSectorChange = async (sector) => {\n    setMenuOpen(false)\n    await dispatch(setSector(sector));\n  }\n  return (\n    <React.Fragment>\n      <Button\n        ref={actionRef}\n        onClick={() => setMenuOpen(true)}\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          className={classes.actionIcon}\n        >\n          <DatabaseIcon />\n        </SvgIcon>\n        {sector?.label}\n      </Button>\n      <Menu\n        anchorEl={actionRef.current}\n        onClose={() => setMenuOpen(false)}\n        open={isMenuOpen}\n        PaperProps={{ className: classes.menu }}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {sectorsList.map((t) => (\n          <MenuItem\n            key={t.key}\n            onClick={() => handleSectorChange(t)}\n          >\n            {t.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nSectorFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SectorFilter;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SectorFilter from 'src/components/SectorFilter';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Hoje'\n  },\n  {\n    value: 'yesterday',\n    text: 'Ontem'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Últimos 30 dias'\n  },\n  {\n    value: 'last_year',\n    text: 'Último ano'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  // const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Análises\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Sentimentos\n          </Typography>\n\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Veja as ultimas noticias\n        </Typography>\n      </Grid>\n      <Grid item>\n      <SectorFilter/>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  menuItem: {\n    padding: 0\n  },\n  formControlLabel: {\n    padding: theme.spacing(0.5, 2),\n    width: '100%',\n    margin: 0\n  }\n}));\n\nfunction MultiSelect({\n  label,\n  options,\n  value,\n  onChange\n}) {\n  const classes = useStyles();\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleOptionToggle = (event) => {\n    let newValue = [...value];\n\n    if (event.target.checked) {\n      newValue.push(event.target.value);\n    } else {\n      newValue = newValue.filter((item) => item !== event.target.value);\n    }\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        onClick={handleMenuOpen}\n        ref={anchorRef}\n      >\n        {label}\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        className={classes.menu}\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ style: { width: 250 } }}\n      >\n        {options.map((option) => (\n          <MenuItem\n            className={classes.menuItem}\n            key={option}\n          >\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={(\n                <Checkbox\n                  checked={value.indexOf(option) > -1}\n                  onClick={handleOptionToggle}\n                  value={option}\n                />\n              )}\n              label={option}\n            />\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nMultiSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.array.isRequired\n};\n\nexport default MultiSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  makeStyles\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst selectOptions = [\n  {\n    label: 'Type',\n    options: [\n      'Freelance',\n      'Full Time',\n      'Part Time',\n      'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  chip: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Filter({ className, ...rest }) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SearchIcon />\n        <Input\n          disableUnderline\n          fullWidth\n          className={classes.searchInput}\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </Box>\n      <Divider />\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </Box>\n      <Divider />\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n        p={1}\n      >\n        {selectOptions.map((option) => (\n          <MultiSelect\n            key={option.label}\n            label={option.label}\n            onChange={handleMultiSelectChange}\n            options={option.options}\n            value={chips}\n          />\n        ))}\n        <Box flexGrow={1} />\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={(\n            <Checkbox defaultChecked />\n          )}\n          label=\"In network\"\n        />\n      </Box>\n    </Card>\n  );\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.media}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.technology}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Technology\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likes}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.subscribersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.subscribers}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon,\n  Eye\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  tooltip: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    height: '40px',\n  }\n\n}));\n\nfunction ArticleCard({ article, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to={`/app/sentiments/${article._id}`}\n              variant=\"h5\"\n            >\n              {article?.title?.text}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              por\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                href={article.title.href}\n                variant=\"h6\"\n                target=\"_blank\"\n              >\n                {article?.metadata.source}\n              </Link>\n              {' '}\n              | Publicado\n              {' '}\n              {article?.metadata?.datetime}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n        color=\"textSecondary\"\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {article?.resume}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Busca\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {article?.metadata?.query}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n           <SvgIcon\n          fontSize=\"small\"\n          color={article?.score?.color}\n          className={classes.subscribersIcon}\n        >\n          <Eye />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color={article?.score?.color != 'action' ? article?.score?.color : 'initial'}\n        >\n          {article?.score?.label}\n        </Typography>\n       \n        <Box flexGrow={1} />\n        <IconButton\n          component={RouterLink}\n          to={`/app/analysis/sentiments/${article._id}`}\n        >\n          <SvgIcon  fontSize=\"small\">\n            <ArrowRightIcon />\n          </SvgIcon>\n        </IconButton>\n      </Box>\n    </Card>\n  );\n}\n\nArticleCard.propTypes = {\n  className: PropTypes.string,\n  article: PropTypes.object.isRequired\n};\n\nexport default ArticleCard;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  IconButton,\n  SvgIcon,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ArrowRight as ArrowRightIcon,\n} from 'react-feather';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  tooltip: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    height: '40px',\n  },\n  skeleton: {\n    width: \"100%\"\n  }\n\n}));\n\nfunction ArticleCardSkeleton({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <Skeleton animation=\"wave\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt={2}\n          >\n          </Box>\n        </Skeleton>\n        <Skeleton animation=\"wave\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt={2}\n          >\n          </Box>\n        </Skeleton>\n        <Skeleton animation=\"wave\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt={2}\n          >\n          </Box>\n        </Skeleton>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n        color=\"textSecondary\"\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          <Skeleton variant=\"rect\" height={118} />\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              <Skeleton width={100} className={classes.skeleton} animation=\"wave\" />\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Skeleton variant=\"circle\" width={20} height={20} animation=\"wave\" />\n        <Skeleton variant=\"circle\" width={20} height={20} animation=\"wave\" />\n        <Box flexGrow={1} />\n        <IconButton\n          href=\"#\"\n        >\n          <SvgIcon fontSize=\"small\">\n            <ArrowRightIcon />\n          </SvgIcon>\n        </IconButton>\n      </Box>\n    </Card>\n  );\n}\n\nArticleCardSkeleton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ArticleCardSkeleton;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  Pagination\n} from '@material-ui/lab';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from 'src/components/ProjectCard';\nimport ArticleCard from 'src/components/ArticleCard';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router'\nimport ArticleCardSkeleton from 'src/components/ArticleCardSkeleton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n\n  sortButton: {\n    textTransform: 'none',\n    letterSpacing: 0,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction Results({ className, articles, ...rest }) {\n  const classes = useStyles();\n  const skeleton = [...Array(10).keys()]\n  const lengthPerPage = 10\n  const [mode, setMode] = useState('grid');\n  const [count, setCount] = useState(10);\n  const [articlesPiece, setArticlesPiece] = useState([]);\n\n  useEffect(() => {\n    if(articles){\n      setArticlesPiece(articles.slice(0, lengthPerPage))\n      setCount(Math.round(articles.length / lengthPerPage))\n    }\n  }, [articles])\n\n  const handlePaginationChange = (event, value) => {\n    const index = (value - 1) * lengthPerPage\n    const finalIndex = index + lengthPerPage\n    setArticlesPiece(articles.slice(index, finalIndex))\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexWrap=\"wrap\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Visualizando\n          {' '}\n          {articles?.length}\n          {' '}\n          noticias\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid\n        container\n        spacing={3}\n      >\n        {articles && articlesPiece.map((article) => (\n          <Grid\n            item\n            key={article._id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ArticleCard article={article} />\n          </Grid>\n        ))}\n        {!articles && skeleton.map((sk,index) => (\n          <Grid\n            item\n            key={`Skeleton_${index}`}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ArticleCardSkeleton />\n          </Grid>\n        ))}\n      </Grid>\n      <Box\n        mt={6}\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Pagination onChange={handlePaginationChange} count={count} />\n      </Box>\n      {/* <Menu\n        anchorEl={sortRef.current}\n        className={classes.menu}\n        onClose={handleSortClose}\n        open={openSort}\n        elevation={1}\n      >\n        {['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(\n          (option) => (\n            <MenuItem\n              key={option}\n              onClick={() => handleSortSelect(option)}\n            >\n              <ListItemText primary={option} />\n            </MenuItem>\n          )\n        )}\n      </Menu> */}\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  articles: PropTypes.array\n};\n\nexport default Results;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Filter from './Filter';\nimport ArticlesList from './ArticlesList';\nimport axios from 'src/utils/axios'\nimport { Article } from 'src/models/article';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\nfunction AnalysisSentimentsView({ className, ...rest }) {\n  const [articles, setArticles] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try{\n        let response = await axios.get('/analysis/news/')\n        if(response.data && Array.isArray(response.data)){\n          const news = response.data.map((art)=>{\n            const article = new Article()\n            article.setDataFromDB(art)\n            return article.toListItem()\n          })\n          setArticles(news)\n        }else{\n          return null\n        }\n       \n      }catch(err){\n        if(err.response){\n          console.error(\"Error response:\");\n          console.error(err.response);    // ***\n          console.error(err?.response?.status);  // ***\n          console.error(err?.response?.headers); // ***\n        }\n      }\n    }\n    fetchData();\n  }, [])\n\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Analise de sentimentos\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={6}>\n          <ArticlesList articles={articles}></ArticlesList>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nAnalysisSentimentsView.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AnalysisSentimentsView;\n"],"sourceRoot":""}