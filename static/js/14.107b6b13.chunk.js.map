{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/auth/RegisterView/RegisterForm.js","views/auth/RegisterView/index.js"],"names":["createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","useStyles","makeStyles","RegisterForm","className","onSubmitSuccess","rest","dispatch","useDispatch","firebase","useFirebase","initialValues","firstName","lastName","email","password","policy","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","signUp","success","console","log","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","error","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","value","variant","Box","alignItems","display","mt","ml","Typography","Link","component","href","FormHelperText","Button","default","justifyContent","background","dark","minHeight","flexDirection","paddingBottom","paddingTop","RegisterView","history","useHistory","Page","title","Container","maxWidth","mb","to","Logo","RouterLink","backButton","Card","CardContent","gutterBottom","push","my","Divider"],"mappings":"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","file":"static/js/14.107b6b13.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport { signUp } from 'src/actions/firebaseActions';\nimport { useFirebase } from 'react-redux-firebase';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firebase = useFirebase()\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        firstName: Yup.string().max(255).required('Primeiro nome é obrigatório'),\n        lastName: Yup.string().max(255).required('Sobrenome é obrigatório'),\n        email: Yup.string().email('Digite um email válido').max(255).required('Email é obrigatório'),\n        password: Yup.string().min(7).max(255).required('Senha é obrigatória'),\n        policy: Yup.boolean().oneOf([true], 'Aceite os termos')\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          setSubmitting(true)\n          await dispatch(signUp(values,firebase) )\n          setStatus({ success: true });\n          onSubmitSuccess()\n        } catch (error) {\n          console.log(error);\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n          <form\n            className={clsx(classes.root, className)}\n            onSubmit={handleSubmit}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.firstName && errors.firstName)}\n              fullWidth\n              helperText={touched.firstName && errors.firstName}\n              label=\"Primeiro nome\"\n              margin=\"normal\"\n              name=\"firstName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"firstName\"\n              value={values.firstName}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.lastName && errors.lastName)}\n              fullWidth\n              helperText={touched.lastName && errors.lastName}\n              label=\"Sobrenome\"\n              margin=\"normal\"\n              name=\"lastName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"lastName\"\n              value={values.lastName}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Senha\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              mt={2}\n              ml={-1}\n            >\n              <Checkbox\n                checked={values.policy}\n                name=\"policy\"\n                onChange={handleChange}\n              />\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                Eu aceito os\n              {' '}\n                <Link\n                  component=\"a\"\n                  href=\"#\"\n                  color=\"secondary\"\n                >\n                  Termos e Condições\n              </Link>\n              </Typography>\n            </Box>\n            {Boolean(touched.policy && errors.policy) && (\n              <FormHelperText error>\n                {errors.policy}\n              </FormHelperText>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Criar conta\n            </Button>\n            </Box>\n          </form>\n        )}\n    </Formik>\n  );\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nRegisterForm.default = {\n  onSubmitSuccess: () => { }\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport RegisterForm from './RegisterForm';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    minHeight: '100%',\n    flexDirection: 'column',\n    paddingBottom: 20,\n    paddingTop: 20\n  }\n}));\n\nfunction RegisterView() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmitSuccess = () => {\n    history.push('/login');\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Container maxWidth=\"sm\">\n        <Box\n          mb={5}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n          <Button\n            component={RouterLink}\n            to=\"/\"\n            className={classes.backButton}\n          >\n            Voltar\n          </Button>\n        </Box>\n        <Card>\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n              color=\"textPrimary\"\n            >\n              Registrar\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              Registre-se na plataforma\n            </Typography>\n            <Box mt={3}>\n              <RegisterForm onSubmitSuccess={handleSubmitSuccess} />\n            </Box>\n            <Box my={2}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Possui uma conta?\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nexport default RegisterView;\n"],"sourceRoot":""}