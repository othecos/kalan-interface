{"version":3,"sources":["hooks/useIsMountedRef.js","components/GenericMoreButton.js","utils/getInitials.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/icons/GetApp.js","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/icons/PictureAsPdf.js","../node_modules/@material-ui/icons/ArchiveOutlined.js","views/pages/Analysis/SentimentsView/SentimentsGraph/Chart.js","views/pages/Analysis/SentimentsView/SentimentsGraph/index.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/OpenInNew.js","views/pages/Analysis/Header.js","views/reports/DashboardView/LatestProjects.js","components/StackAvatars.js","views/pages/Analysis/StocksView/StocksPreview/StockPreviewItem.js","views/pages/Analysis/StocksView/StocksPreview/index.js","views/pages/Analysis/SentimentsView/SentimentsPreview/CircularProgress.js","views/pages/Analysis/SentimentsView/SentimentsPreview/index.js","views/pages/Analysis/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","menu","width","maxWidth","memo","props","classes","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","fontSize","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","className","transformOrigin","primary","name","replace","split","slice","map","v","toUpperCase","join","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Chart","dataProp","data","rest","theme","useTheme","datasets","dataset","borderWidth","borderColor","palette","background","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","display","layout","padding","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","divider","backgroundColor","dark","titleFontColor","text","bodyFontColor","secondary","footerFontColor","callbacks","label","tooltipItem","_data","index","root","item","textAlign","flexGrow","flexDirection","justifyContent","spacing","borderRight","SentimentsGraph","isMountedRef","sentiments","setSentiments","getSentiments","useCallback","axios","get","then","response","Card","clsx","CardHeader","Divider","Box","p","position","minHeight","i","key","Typography","variant","color","React","action","avatar","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutProperties","type","_extends","content","withStyles","alignItems","flex","marginRight","alignSelf","marginTop","ListItemIcon","context","ListContext","alignItemsFlexStart","minWidth","active","flexShrink","sectorsList","actionIcon","Header","dispatch","useDispatch","actionRef","sector","useSelector","state","analysis","isMenuOpen","setMenuOpen","setSector","handleSectorChange","a","Grid","container","justify","Breadcrumbs","separator","aria-label","Button","SvgIcon","Menu","getContentAnchorEl","t","MenuItem","technology","height","marginLeft","navigateNextIcon","LatestProjects","paddingLeft","border","zIndex","more","colors","red","common","white","StackAvatars","avatars","limit","lastIndex","avatarNodes","Tooltip","Avatar","src","length","push","defaultProps","viewButton","StockPreview","stock","location","useLocation","ListItem","xs","md","ListItemText","listItemText","primaryTypographyProps","noWrap","ticker","IconButton","RouterLink","to","pathname","StocksPreview","stocksPreview","setStocksPreview","getStocksPreview","stocks","List","StockPreviewItem","id","strokeDasharray","circle1","stroke","fill","strokeWidth","circle2","circleNegative","circleNeutral","CircularProgress","viewBox","image","subscriptions","fontWeight","typography","fontWeightMedium","green","SentimentsPreview","articlesSentiments","setArticlesSentiments","getArticlesSentiments","Table","TableBody","articleSentiments","TableRow","hover","TableCell","ml","source","mr","align","size","paddingTop","paddingBottom","breakpoints","up","paddingRight","Analysis","Page","Container","createSvgIcon","TableSortLabel","_props$active","children","_props$direction","direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","icon","concat","capitalize","cursor","opacity","transition","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc"],"mappings":"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","file":"static/js/8.6b7d71c1.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.81.97H5.44l.8-.97zM5 19V8h14v11H5zm8.45-9h-2.9v3H8l4 4 4-4h-2.55z\"\n}), 'ArchiveOutlined');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nfunction Chart({ data: dataProp, ...rest }) {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(((dataset) => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    }))),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={options}\n      {...rest}\n    />\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction SentimentsGraph({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [sentiments, setSentiments] = useState(null);\n\n  const getSentiments = useCallback(() => {\n    axios\n      .get('/api/analysis/graph')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setSentiments(response.data.sentiments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSentiments();\n  }, [getSentiments]);\n\n  if (!sentiments) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Sentimento das noticias\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={sentiments} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {sentiments.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {sentiments.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nSentimentsGraph.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SentimentsGraph;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'OpenInNew');\n\nexports.default = _default;","import React, { useEffect, useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSector } from 'src/actions/analysisActions';\n\n\nconst sectorsList = [\n  {\n    key: 'bank',\n    label: 'Setor Bancário'\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const {sector} = useSelector(state => state.analysis)\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSector(sectorsList[0]));\n  }, [dispatch]);\n\n  const handleSectorChange = async (sector ) =>{\n    setMenuOpen(false)\n    await dispatch(setSector(sector));\n  }\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Análises\n          </Typography>\n        </Breadcrumbs>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {sector?.label}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {sectorsList.map((t) => (\n            <MenuItem\n              key={t.key}\n              onClick={()=> handleSectorChange(t)}\n            >\n              {t.label}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axiosMock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst technologyMap = {\n  'html-css': '/static/images/technologies/html.svg',\n  'react-js': '/static/images/technologies/react-js.svg',\n  'vue-js': '/static/images/technologies/vue-js.svg',\n  angular: '/static/images/technologies/angular.svg',\n  figma: '/static/images/technologies/figma.svg',\n  sketch: '/static/images/technologies/sketch.svg'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestProjects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    axios\n      .get('/api/reports/latest-projects')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProjects(response.data.projects);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Noticias\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Ação\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Setor\n                </TableCell>\n                <TableCell>\n                  Quantidade de noticias\n                </TableCell>\n                <TableCell>\n                  Têndencia\n                </TableCell>\n                <TableCell align=\"right\">\n                  Data Ultima noticia\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project) => (\n                <TableRow\n                  hover\n                  key={project.id}\n                >\n                  <TableCell>\n                    {project.title}\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      {/* <Avatar\n                        alt=\"Author\"\n                        className={classes.avatar}\n                        src={project.author.avatar}\n                      >\n                        {getInitials(project.author.name)}\n                      </Avatar> */}\n                      <Box ml={1}>\n                        {project.sector}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {project.amount}\n                  </TableCell>\n                  <TableCell>\n                    {project.tendency}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.background.default}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: colors.red[600],\n    color: colors.common.white\n  }\n}));\n\nfunction StackAvatars({\n  avatars,\n  limit,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  let lastIndex = 0;\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={++lastIndex}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Avatar\n        key={++lastIndex}\n        className={clsx(classes.avatar, classes.more)}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"subtitle2\"\n        >\n          +\n          {avatars.length - limit}\n        </Typography>\n      </Avatar>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  ListItem,\n  ListItemText,\n  IconButton,\n  Tooltip,\n  makeStyles,\n  Box,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport StackAvatars from 'src/components/StackAvatars';\nimport { Link as RouterLink,useLocation } from 'react-router-dom';\nimport axios from 'src/utils/axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction StockPreview({ stock, className, ...rest }) {\n  const classes = useStyles();\n  const location = useLocation();\n  return (\n    <ListItem\n      className={clsx(\n        classes.root,\n        className\n      )}\n      {...rest}\n    >\n      <Grid container >\n        <Grid item xs={4} md={7}>\n          <ListItemText\n            className={classes.listItemText}\n            primary={stock.name}\n            primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n            secondary={stock.ticker}\n          />\n        </Grid>\n\n\n        <Grid container spacing={2} xs={8} item md={5} alignItems=\"center\" justify=\"flex-end\">\n          {/* <Grid item >\n            <Typography\n              align=\"right\"\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n             Atual - {stock.price || 'R$42,00'} \n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color={\"textSecondary\"}\n            >\n              Justo -  <span className=\"secondary\"> { stock?.valuation?.value || 'R$21,00'}</span>\n            </Typography>\n          </Grid> */}\n          <Grid item>\n            <Tooltip title=\"Visualizar ação\">\n              <IconButton\n                component={RouterLink}\n                to={`${location.pathname}/stocks/${stock.ticker}`}\n                className={classes.viewButton}\n              >\n                <OpenInNewIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n\n        </Grid>\n      \n      </Grid>\n\n\n    </ListItem>\n  );\n}\n\nStockPreview.propTypes = {\n  className: PropTypes.string,\n  stock: PropTypes.object.isRequired\n};\n\nexport default StockPreview;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport StockPreviewItem from './StockPreviewItem';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction StocksPreview({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [stocksPreview, setStocksPreview] = useState(null);\n\n\n  // const [stocks, setStocks] = useState(null);\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try{\n  //       let response = await axios.get('/analysis/stocks/')\n  //       console.log(response.data);\n  //       let docs = response.data\n  //       setArticles(docs)\n  //     }catch(err){\n  //       if(err.response){\n  //         console.error(\"Error response:\");\n  //         console.error(err.response);    // ***\n  //         console.error(err?.response?.status);  // ***\n  //         console.error(err?.response?.headers); // ***\n  //       }\n  //     }\n  //   }\n  //   fetchData();\n  // }, [])\n\n  const getStocksPreview = useCallback(() => {\n    axios\n      .get('/api/stocks/top-stocks')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setStocksPreview(response.data.stocks);\n        }\n      })\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStocksPreview();\n  }, [getStocksPreview]);\n\n  if (!stocksPreview) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Ações\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box >\n          <List>\n            {stocksPreview.map((stock, i) => (\n              <StockPreviewItem\n                divider={i < stocksPreview.length - 1}\n                key={stock.id}\n                stock={stock}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nStocksPreview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default StocksPreview;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: '#4b9e86',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  circleNegative: {\n    stroke: '#b658f5',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  circleNeutral: {\n    stroke: '#3d72eb',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n}));\n\nfunction CircularProgress({ value, className, color, ...rest }) {\n  const classes = useStyles(value);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {color == 'neutral' ?\n        <svg viewBox=\"0 0 36 36\">\n          <path\n            className={classes.circle1}\n            d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n            strokeDasharray=\"100, 100\"\n          />\n          <path\n            className={classes.circleNeutral}\n            d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n            strokeDasharray={`${value}, 100`}\n          />\n        </svg>\n        : color == 'negative' ?\n          <svg viewBox=\"0 0 36 36\">\n            <path\n              className={classes.circle1}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"\n            />\n            <path\n              className={classes.circleNegative}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${value}, 100`}\n            />\n          </svg> :\n          <svg viewBox=\"0 0 36 36\">\n            <path\n              className={classes.circle1}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"\n            />\n            <path\n              className={classes.circle2}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${value}, 100`}\n            />\n          </svg>\n      }\n\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction SentimentsPreview({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const {sector } = useSelector(state=> state.analysis)\n  const [articlesSentiments, setArticlesSentiments] = useState(null);\n\n  const getArticlesSentiments = useCallback(() => {\n    axios\n      .get('/api/analysis/sentiments')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setArticlesSentiments(response.data.articlesSentiments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getArticlesSentiments();\n  }, [getArticlesSentiments]);\n\n  if (!articlesSentiments) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Noticias\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box >\n          <Table>\n            <TableBody>\n              {articlesSentiments.map((articleSentiments) => (\n                <TableRow\n                  hover\n                  key={articleSentiments.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {articleSentiments.title}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {articleSentiments.source}\n                          </span>\n                        </Typography>\n                      </Box>\n                      <Box display=\"flex\" mr={2}>\n                        <Box  mr={2}>\n                          <Typography\n                            align=\"right\"\n                            variant=\"h6\"\n                            color=\"textPrimary\"\n                          >\n                            {articleSentiments.sentiments.label}\n                        </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            Sentimento\n                        </Typography>\n                        </Box>\n\n                        <CircularProgress value={100} color={ articleSentiments.sentiments.value == -1 ? 'negative' : articleSentiments.sentiments.value == 0 ? 'neutral' : 'positive'  } />\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to={`/app/analysis/sentiments/`}\n        >\n          Ver todas\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nSentimentsPreview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SentimentsPreview;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport LatestProjects from 'src/views/reports/DashboardView/LatestProjects';\nimport StocksPreview from './StocksView/StocksPreview';\nimport SentimentsPreview from './SentimentsView/SentimentsPreview';\nimport SentimentsGraph from './SentimentsView/SentimentsGraph';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction Analysis() {\n  const classes = useStyles();\n  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Analises\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          \n          <Grid\n            item\n            md={12}\n            xs={12}\n          >\n             <StocksPreview />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <SentimentsGraph />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <SentimentsPreview />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Analysis;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);"],"sourceRoot":""}