{"version":3,"sources":["utils/getInitials.js","components/SectorFilter.js","views/pages/Analysis/SentimentsView/Header.js","views/pages/Analysis/SentimentsView/Filter/MultiSelect.js","views/pages/Analysis/SentimentsView/Filter/index.js","components/ProjectCard.js","components/ArticleCard.js","components/ArticleCardSkeleton.js","views/pages/Analysis/SentimentsView/Results.js","views/pages/Analysis/SentimentsView/index.js"],"names":["name","replace","split","slice","map","v","toUpperCase","join","sectorsList","key","label","useStyles","makeStyles","theme","root","actionIcon","marginRight","spacing","SectorFilter","className","dispatch","useDispatch","classes","actionRef","useRef","sector","useSelector","state","analysis","useState","isMenuOpen","setMenuOpen","useEffect","setSector","handleSectorChange","a","Fragment","ref","onClick","fontSize","anchorEl","current","onClose","open","PaperProps","menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","t","Header","rest","Grid","alignItems","container","justify","clsx","item","Breadcrumbs","separator","aria-label","Link","variant","color","to","component","RouterLink","Typography","menuItem","padding","formControlLabel","width","margin","searchInput","marginLeft","chip","Filter","media","height","backgroundColor","palette","background","dark","likedButton","colors","red","subscribersIcon","ProjectCard","tooltip","overflow","textOverflow","ArticleCard","article","Card","Box","p","display","mt","ml","_id","title","text","href","target","metadata","source","datetime","pb","px","resume","py","query","Divider","pl","pr","SvgIcon","score","flexGrow","IconButton","skeleton","ArticleCardSkeleton","Skeleton","animation","position","bottom","left","content","primary","main","sortButton","textTransform","letterSpacing","Results","articles","mode","setMode","count","setCount","articlesPiece","setArticlesPiece","Math","round","length","justifyContent","flexWrap","mb","ToggleButtonGroup","exclusive","onChange","event","value","size","ToggleButton","md","sm","xs","sk","index","Pagination","finalIndex","minHeight","paddingTop","paddingBottom","AnalysisSentimentsView","setArticles","axios","get","response","docs","data","console","error","status","headers","fetchData","Page","Container","maxWidth"],"mappings":"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","file":"static/js/12.af84e953.chunk.js","sourcesContent":["export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Database as DatabaseIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSector } from 'src/actions/analysisActions';\n\n\nconst sectorsList = [\n  {\n    key: 'bank',\n    label: 'Setor Bancário'\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction SectorFilter({ className, ...rest }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const { sector } = useSelector(state => state.analysis)\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSector(sectorsList[0]));\n  }, [dispatch]);\n\n  const handleSectorChange = async (sector) => {\n    setMenuOpen(false)\n    await dispatch(setSector(sector));\n  }\n  return (\n    <React.Fragment>\n      <Button\n        ref={actionRef}\n        onClick={() => setMenuOpen(true)}\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          className={classes.actionIcon}\n        >\n          <DatabaseIcon />\n        </SvgIcon>\n        {sector?.label}\n      </Button>\n      <Menu\n        anchorEl={actionRef.current}\n        onClose={() => setMenuOpen(false)}\n        open={isMenuOpen}\n        PaperProps={{ className: classes.menu }}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {sectorsList.map((t) => (\n          <MenuItem\n            key={t.key}\n            onClick={() => handleSectorChange(t)}\n          >\n            {t.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nSectorFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SectorFilter;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SectorFilter from 'src/components/SectorFilter';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Hoje'\n  },\n  {\n    value: 'yesterday',\n    text: 'Ontem'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Últimos 30 dias'\n  },\n  {\n    value: 'last_year',\n    text: 'Último ano'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  // const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Análises\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Sentimentos\n          </Typography>\n\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Veja as ultimas noticias\n        </Typography>\n      </Grid>\n      <Grid item>\n      <SectorFilter/>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  menuItem: {\n    padding: 0\n  },\n  formControlLabel: {\n    padding: theme.spacing(0.5, 2),\n    width: '100%',\n    margin: 0\n  }\n}));\n\nfunction MultiSelect({\n  label,\n  options,\n  value,\n  onChange\n}) {\n  const classes = useStyles();\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleOptionToggle = (event) => {\n    let newValue = [...value];\n\n    if (event.target.checked) {\n      newValue.push(event.target.value);\n    } else {\n      newValue = newValue.filter((item) => item !== event.target.value);\n    }\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        onClick={handleMenuOpen}\n        ref={anchorRef}\n      >\n        {label}\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        className={classes.menu}\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ style: { width: 250 } }}\n      >\n        {options.map((option) => (\n          <MenuItem\n            className={classes.menuItem}\n            key={option}\n          >\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={(\n                <Checkbox\n                  checked={value.indexOf(option) > -1}\n                  onClick={handleOptionToggle}\n                  value={option}\n                />\n              )}\n              label={option}\n            />\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nMultiSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.array.isRequired\n};\n\nexport default MultiSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  makeStyles\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst selectOptions = [\n  {\n    label: 'Type',\n    options: [\n      'Freelance',\n      'Full Time',\n      'Part Time',\n      'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  chip: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Filter({ className, ...rest }) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SearchIcon />\n        <Input\n          disableUnderline\n          fullWidth\n          className={classes.searchInput}\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </Box>\n      <Divider />\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </Box>\n      <Divider />\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n        p={1}\n      >\n        {selectOptions.map((option) => (\n          <MultiSelect\n            key={option.label}\n            label={option.label}\n            onChange={handleMultiSelectChange}\n            options={option.options}\n            value={chips}\n          />\n        ))}\n        <Box flexGrow={1} />\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={(\n            <Checkbox defaultChecked />\n          )}\n          label=\"In network\"\n        />\n      </Box>\n    </Card>\n  );\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.media}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.technology}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Technology\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likes}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.subscribersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.subscribers}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon,\n  Eye\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  tooltip: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    height: '40px',\n  }\n\n}));\n\nfunction ArticleCard({ article, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to={`/app/sentiments/${article._id}`}\n              variant=\"h5\"\n            >\n              {article?.title?.text}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              por\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                href={article.title.href}\n                variant=\"h6\"\n                target=\"_blank\"\n              >\n                {article?.metadata.source}\n              </Link>\n              {' '}\n              | Publicado\n              {' '}\n              {article?.metadata?.datetime}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n        color=\"textSecondary\"\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {article?.resume}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Busca\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {article?.metadata?.query}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {/* {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n            <Tooltip title=\"Like\">\n              <IconButton onClick={handleLike}>\n                <FavoriteBorderIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          )} */}\n           <SvgIcon\n          fontSize=\"small\"\n          color=\"secondary\"\n          className={classes.subscribersIcon}\n        >\n          <Eye />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"secondary\"\n        >\n          {article?.score?.label || 'Neutro'}\n        </Typography>\n       \n        <Box flexGrow={1} />\n        <IconButton\n          component={RouterLink}\n          to={`/app/analysis/sentiments/${article._id}`}\n        >\n          <SvgIcon  fontSize=\"small\">\n            <ArrowRightIcon />\n          </SvgIcon>\n        </IconButton>\n      </Box>\n    </Card>\n  );\n}\n\nArticleCard.propTypes = {\n  className: PropTypes.string,\n  article: PropTypes.object.isRequired\n};\n\nexport default ArticleCard;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  IconButton,\n  SvgIcon,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ArrowRight as ArrowRightIcon,\n} from 'react-feather';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  tooltip: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    height: '40px',\n  },\n  skeleton: {\n    width: \"100%\"\n  }\n\n}));\n\nfunction ArticleCardSkeleton({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <Skeleton animation=\"wave\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt={2}\n          >\n          </Box>\n        </Skeleton>\n        <Skeleton animation=\"wave\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt={2}\n          >\n          </Box>\n        </Skeleton>\n        <Skeleton animation=\"wave\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt={2}\n          >\n          </Box>\n        </Skeleton>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n        color=\"textSecondary\"\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          <Skeleton variant=\"rect\" height={118} />\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              <Skeleton width={100} className={classes.skeleton} animation=\"wave\" />\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Skeleton variant=\"circle\" width={20} height={20} animation=\"wave\" />\n        <Skeleton variant=\"circle\" width={20} height={20} animation=\"wave\" />\n        <Box flexGrow={1} />\n        <IconButton\n          href=\"#\"\n        >\n          <SvgIcon fontSize=\"small\">\n            <ArrowRightIcon />\n          </SvgIcon>\n        </IconButton>\n      </Box>\n    </Card>\n  );\n}\n\nArticleCardSkeleton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ArticleCardSkeleton;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  Pagination\n} from '@material-ui/lab';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from 'src/components/ProjectCard';\nimport ArticleCard from 'src/components/ArticleCard';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router'\nimport ArticleCardSkeleton from 'src/components/ArticleCardSkeleton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n\n  sortButton: {\n    textTransform: 'none',\n    letterSpacing: 0,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction Results({ className, articles, ...rest }) {\n  const classes = useStyles();\n  const sortRef = useRef(null);\n  const skeleton = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\n  const lengthPerPage = 10\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState('Most popular');\n  const [mode, setMode] = useState('grid');\n  const [count, setCount] = useState(10);\n  const [articlesPiece, setArticlesPiece] = useState([]);\n\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  useEffect(() => {\n    if(articles){\n      setArticlesPiece(articles.slice(0, lengthPerPage))\n      setCount(Math.round(articles.length / lengthPerPage))\n    }\n  }, [articles])\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n  const handlePaginationChange = (event, value) => {\n    const index = (value - 1) * lengthPerPage\n    const finalIndex = index + lengthPerPage\n    setArticlesPiece(articles.slice(index, finalIndex))\n  };\n\n  const handleSortSelect = (value) => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexWrap=\"wrap\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Visualizando\n          {' '}\n          {articles?.length}\n          {' '}\n          noticias\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {/* <Button\n            className={classes.sortButton}\n            onClick={handleSortOpen}\n            ref={sortRef}\n          >\n            {selectedSort}\n            <ArrowDropDownIcon />\n          </Button> */}\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid\n        container\n        spacing={3}\n      >\n        {articles && articlesPiece.map((article) => (\n          <Grid\n            item\n            key={article._id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ArticleCard article={article} />\n          </Grid>\n        ))}\n        {!articles && skeleton.map((sk,index) => (\n          <Grid\n            item\n            key={`Skeleton_${index}`}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ArticleCardSkeleton />\n          </Grid>\n        ))}\n      </Grid>\n      <Box\n        mt={6}\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Pagination onChange={handlePaginationChange} count={count} />\n      </Box>\n      {/* <Menu\n        anchorEl={sortRef.current}\n        className={classes.menu}\n        onClose={handleSortClose}\n        open={openSort}\n        elevation={1}\n      >\n        {['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(\n          (option) => (\n            <MenuItem\n              key={option}\n              onClick={() => handleSortSelect(option)}\n            >\n              <ListItemText primary={option} />\n            </MenuItem>\n          )\n        )}\n      </Menu> */}\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  articles: PropTypes.array\n};\n\nexport default Results;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Filter from './Filter';\nimport Results from './Results';\nimport axios from 'src/utils/axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\nfunction AnalysisSentimentsView({ className, ...rest }) {\n  const [articles, setArticles] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try{\n        let response = await axios.get('/analysis/news/')\n        let docs = response.data\n        setArticles(docs)\n      }catch(err){\n        if(err.response){\n          console.error(\"Error response:\");\n          console.error(err.response);    // ***\n          console.error(err?.response?.status);  // ***\n          console.error(err?.response?.headers); // ***\n        }\n      }\n    }\n    fetchData();\n  }, [])\n\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Analise de sentimentos\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={6}>\n          <Results articles={articles}></Results>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nAnalysisSentimentsView.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AnalysisSentimentsView;\n"],"sourceRoot":""}