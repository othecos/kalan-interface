{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/GenericMoreButton.js","views/pages/Analysis/SentimentsView/SentimentsPreview/CircularProgress.js","views/pages/Analysis/SentimentsView/SentimentsPreview/index.js","views/pages/Analysis/Header.js","views/reports/DashboardView/LatestProjects.js","components/StackAvatars.js","views/pages/Analysis/StocksView/StocksPreview/StockPreviewItem.js","views/pages/Analysis/StocksView/StocksPreview/index.js","views/pages/Analysis/SentimentsView/SentimentsGraph/Chart.js","views/pages/Analysis/SentimentsView/SentimentsGraph/index.js","views/pages/Analysis/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","menu","width","maxWidth","memo","props","classes","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","fontSize","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","className","transformOrigin","primary","theme","root","height","strokeDasharray","circle1","stroke","palette","type","fill","strokeWidth","circle2","animation","circleNegative","circleNeutral","CircularProgress","value","color","rest","clsx","viewBox","d","image","flexShrink","subscriptions","fontWeight","typography","fontWeightMedium","colors","green","navigateNextIcon","marginLeft","spacing","SentimentsPreview","isMountedRef","sector","useSelector","state","analysis","articlesSentiments","setArticlesSentiments","getArticlesSentiments","useCallback","axios","get","then","response","data","Card","CardHeader","action","GenericMoreButton","Divider","Box","Table","TableBody","articleSentiments","TableRow","hover","key","id","TableCell","display","alignItems","justifyContent","ml","Typography","variant","source","mr","align","sentiments","label","p","Button","component","RouterLink","size","to","sectorsList","actionIcon","marginRight","Header","dispatch","useDispatch","actionRef","isMenuOpen","setMenuOpen","setSector","handleSectorChange","a","Grid","container","justify","item","Breadcrumbs","separator","aria-label","SvgIcon","Menu","getContentAnchorEl","t","MenuItem","technology","LatestProjects","paddingLeft","avatar","border","background","default","zIndex","more","backgroundColor","red","common","white","StackAvatars","avatars","limit","lastIndex","avatarNodes","Tooltip","Avatar","src","length","push","defaultProps","viewButton","StockPreview","stock","location","useLocation","ListItem","xs","ListItemText","listItemText","primaryTypographyProps","noWrap","secondary","ticker","price","valuation","IconButton","pathname","StocksPreview","stocksPreview","setStocksPreview","getStocksPreview","stocks","List","i","StockPreviewItem","divider","Chart","dataProp","useTheme","datasets","dataset","borderWidth","borderColor","hoverBorderColor","labels","options","responsive","maintainAspectRatio","cutoutPercentage","legend","layout","padding","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","dark","titleFontColor","text","bodyFontColor","footerFontColor","callbacks","tooltipItem","_data","index","textAlign","flexGrow","flexDirection","borderRight","SentimentsGraph","setSentiments","getSentiments","position","minHeight","paddingTop","paddingBottom","breakpoints","up","paddingRight","Analysis","Page","Container","md"],"mappings":"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","file":"static/js/14.565b467f.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: '#4b9e86',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  circleNegative: {\n    stroke: '#b658f5',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  circleNeutral: {\n    stroke: '#3d72eb',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n}));\n\nfunction CircularProgress({ value, className, color, ...rest }) {\n  const classes = useStyles(value);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {color == 'neutral' ?\n        <svg viewBox=\"0 0 36 36\">\n          <path\n            className={classes.circle1}\n            d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n            strokeDasharray=\"100, 100\"\n          />\n          <path\n            className={classes.circleNeutral}\n            d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n            strokeDasharray={`${value}, 100`}\n          />\n        </svg>\n        : color == 'negative' ?\n          <svg viewBox=\"0 0 36 36\">\n            <path\n              className={classes.circle1}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"\n            />\n            <path\n              className={classes.circleNegative}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${value}, 100`}\n            />\n          </svg> :\n          <svg viewBox=\"0 0 36 36\">\n            <path\n              className={classes.circle1}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"\n            />\n            <path\n              className={classes.circle2}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${value}, 100`}\n            />\n          </svg>\n      }\n\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction SentimentsPreview({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const {sector } = useSelector(state=> state.analysis)\n  const [articlesSentiments, setArticlesSentiments] = useState(null);\n\n  const getArticlesSentiments = useCallback(() => {\n    axios\n      .get('/api/analysis/sentiments')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setArticlesSentiments(response.data.articlesSentiments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getArticlesSentiments();\n  }, [getArticlesSentiments]);\n\n  if (!articlesSentiments) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Noticias\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box >\n          <Table>\n            <TableBody>\n              {articlesSentiments.map((articleSentiments) => (\n                <TableRow\n                  hover\n                  key={articleSentiments.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {articleSentiments.title}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {articleSentiments.source}\n                          </span>\n                        </Typography>\n                      </Box>\n                      <Box display=\"flex\" mr={2}>\n                        <Box  mr={2}>\n                          <Typography\n                            align=\"right\"\n                            variant=\"h6\"\n                            color=\"textPrimary\"\n                          >\n                            {articleSentiments.sentiments.label}\n                        </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            Sentimento\n                        </Typography>\n                        </Box>\n\n                        <CircularProgress value={100} color={ articleSentiments.sentiments.value == -1 ? 'negative' : articleSentiments.sentiments.value == 0 ? 'neutral' : 'positive'  } />\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to={`/app/analysis/sentiments/${sector?.key}`}\n        >\n          Ver todas\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nSentimentsPreview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SentimentsPreview;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSector } from 'src/actions/analysisActions';\n\n\nconst sectorsList = [\n  {\n    key: 'bank',\n    label: 'Setor Bancário'\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const {sector} = useSelector(state => state.analysis)\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSector(sectorsList[0]));\n  }, [dispatch]);\n\n  const handleSectorChange = async (sector ) =>{\n    setMenuOpen(false)\n    await dispatch(setSector(sector));\n  }\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Análises\n          </Typography>\n        </Breadcrumbs>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {sector?.label}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {sectorsList.map((t) => (\n            <MenuItem\n              key={t.key}\n              onClick={()=> handleSectorChange(t)}\n            >\n              {t.label}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axiosMock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst technologyMap = {\n  'html-css': '/static/images/technologies/html.svg',\n  'react-js': '/static/images/technologies/react-js.svg',\n  'vue-js': '/static/images/technologies/vue-js.svg',\n  angular: '/static/images/technologies/angular.svg',\n  figma: '/static/images/technologies/figma.svg',\n  sketch: '/static/images/technologies/sketch.svg'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestProjects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    axios\n      .get('/api/reports/latest-projects')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProjects(response.data.projects);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Noticias\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Ação\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Setor\n                </TableCell>\n                <TableCell>\n                  Quantidade de noticias\n                </TableCell>\n                <TableCell>\n                  Têndencia\n                </TableCell>\n                <TableCell align=\"right\">\n                  Data Ultima noticia\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project) => (\n                <TableRow\n                  hover\n                  key={project.id}\n                >\n                  <TableCell>\n                    {project.title}\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      {/* <Avatar\n                        alt=\"Author\"\n                        className={classes.avatar}\n                        src={project.author.avatar}\n                      >\n                        {getInitials(project.author.name)}\n                      </Avatar> */}\n                      <Box ml={1}>\n                        {project.sector}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {project.amount}\n                  </TableCell>\n                  <TableCell>\n                    {project.tendency}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.background.default}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: colors.red[600],\n    color: colors.common.white\n  }\n}));\n\nfunction StackAvatars({\n  avatars,\n  limit,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  let lastIndex = 0;\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={++lastIndex}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Avatar\n        key={++lastIndex}\n        className={clsx(classes.avatar, classes.more)}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"subtitle2\"\n        >\n          +\n          {avatars.length - limit}\n        </Typography>\n      </Avatar>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  ListItem,\n  ListItemText,\n  IconButton,\n  Tooltip,\n  makeStyles,\n  Box,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport StackAvatars from 'src/components/StackAvatars';\nimport { Link as RouterLink,useLocation } from 'react-router-dom';\nimport axios from 'src/utils/axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction StockPreview({ stock, className, ...rest }) {\n  const classes = useStyles();\n  const location = useLocation();\n  return (\n    <ListItem\n      className={clsx(\n        classes.root,\n        className\n      )}\n      {...rest}\n    >\n      <Grid container >\n        <Grid item xs={7}>\n          <ListItemText\n            className={classes.listItemText}\n            primary={stock.name}\n            primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n            secondary={stock.ticker}\n          />\n        </Grid>\n\n\n        <Grid container spacing={2} item xs={5} alignItems=\"center\" justify=\"flex-end\">\n          <Grid item >\n            <Typography\n              align=\"right\"\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n             Atual - {stock.price || 'R$42,00'} \n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color={\"textSecondary\"}\n            >\n              Justo -  <span className=\"secondary\"> { stock?.valuation?.value || 'R$21,00'}</span>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Tooltip title=\"View stock\">\n              <IconButton\n                component={RouterLink}\n                to={`${location.pathname}/stocks/${stock.ticker}`}\n                className={classes.viewButton}\n              >\n                <OpenInNewIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n\n        </Grid>\n      </Grid>\n\n\n    </ListItem>\n  );\n}\n\nStockPreview.propTypes = {\n  className: PropTypes.string,\n  stock: PropTypes.object.isRequired\n};\n\nexport default StockPreview;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport StockPreviewItem from './StockPreviewItem';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction StocksPreview({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [stocksPreview, setStocksPreview] = useState(null);\n\n\n  // const [stocks, setStocks] = useState(null);\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try{\n  //       let response = await axios.get('/analysis/stocks/')\n  //       console.log(response.data);\n  //       let docs = response.data\n  //       setArticles(docs)\n  //     }catch(err){\n  //       if(err.response){\n  //         console.error(\"Error response:\");\n  //         console.error(err.response);    // ***\n  //         console.error(err?.response?.status);  // ***\n  //         console.error(err?.response?.headers); // ***\n  //       }\n  //     }\n  //   }\n  //   fetchData();\n  // }, [])\n\n  const getStocksPreview = useCallback(() => {\n    axios\n      .get('/api/stocks/top-stocks')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setStocksPreview(response.data.stocks);\n        }\n      })\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStocksPreview();\n  }, [getStocksPreview]);\n\n  if (!stocksPreview) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Ações\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box >\n          <List>\n            {stocksPreview.map((stock, i) => (\n              <StockPreviewItem\n                divider={i < stocksPreview.length - 1}\n                key={stock.id}\n                stock={stock}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nStocksPreview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default StocksPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nfunction Chart({ data: dataProp, ...rest }) {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(((dataset) => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    }))),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={options}\n      {...rest}\n    />\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction SentimentsGraph({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [sentiments, setSentiments] = useState(null);\n\n  const getSentiments = useCallback(() => {\n    axios\n      .get('/api/analysis/graph')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setSentiments(response.data.sentiments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSentiments();\n  }, [getSentiments]);\n\n  if (!sentiments) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Sentimento das noticias\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={sentiments} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {sentiments.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {sentiments.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nSentimentsGraph.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SentimentsGraph;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport LatestProjects from 'src/views/reports/DashboardView/LatestProjects';\nimport StocksPreview from './StocksView/StocksPreview';\nimport SentimentsPreview from './SentimentsView/SentimentsPreview';\nimport SentimentsGraph from './SentimentsView/SentimentsGraph';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction Analysis() {\n  const classes = useStyles();\n  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Analises\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          \n          <Grid\n            item\n            md={12}\n            xs={12}\n          >\n             <StocksPreview />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <SentimentsGraph />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <SentimentsPreview />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Analysis;\n"],"sourceRoot":""}