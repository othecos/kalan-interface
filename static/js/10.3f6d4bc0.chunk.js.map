{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","components/Label.js","../node_modules/react-feather/dist/icons/arrow-right.js","views/pages/Analysis/StocksView/Header.js","../node_modules/react-feather/dist/icons/image.js","views/pages/Analysis/StocksView/StocksList/index.js","views/pages/Analysis/StocksView/index.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","createSvgIcon","React","d","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRight","props","size","otherProps","createElement","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","action","marginBottom","marginLeft","actionIcon","marginRight","sectorsList","label","Header","dispatch","useDispatch","actionRef","sector","useSelector","state","analysis","useState","isMenuOpen","setMenuOpen","setSector","handleSectorChange","a","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Button","ref","onClick","SvgIcon","Menu","anchorEl","onClose","open","PaperProps","menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","map","t","MenuItem","Image","x","y","rx","ry","cx","cy","r","sortOptions","value","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","background","default","bulkAction","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","image","StocksList","stocks","selectedStocks","page","setPage","limit","setLimit","location","useLocation","category","availability","inStock","isShippable","filteredStocks","query","filters","filter","stock","applyFilters","paginatedStocks","customers","slice","applyPagination","Card","Box","Table","TableHead","TableRow","TableCell","align","TableBody","stockTicker","isStockSelected","includes","id","hover","selected","alt","src","p","bgcolor","ticker","name","price","valuation","IconButton","pathname","TablePagination","count","onChangePage","event","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","dark","minHeight","paddingTop","paddingBottom","breakpoints","up","StocksView","isMountedRef","setStocks","getStocks","useCallback","axios","get","then","response","data","Page","title","Container","maxWidth","mt","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","backIconButtonProps","nextIconButtonProps","other","useTheme","disabled","direction","Math","ceil","defaultLabelDisplayedRows","from","concat","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","_props$component","Component","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","MenuItemComponent","native","Toolbar","toolbar","spacer","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","inputProps","rowsPerPageOption","menuItem","min","actions","withStyles","text","overflow","flex","textAlign","textAlignLast"],"mappings":"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","file":"static/js/10.3f6d4bc0.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar ArrowRight = function ArrowRight(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"12 5 19 12 12 19\"\n  }));\n};\n\nArrowRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRight.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default ArrowRight;","import React, { useEffect, useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport {\n  Calendar as CalendarIcon,\n} from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSector } from 'src/actions/analysisActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst sectorsList = [\n  {\n    key: 'bank',\n    label: 'Setor Bancário'\n  },\n];\nfunction Header({ className, ...rest }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const {sector} = useSelector(state => state.analysis)\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSector(sectorsList[0]));\n  }, [dispatch]);\n\n  const handleSectorChange = async (sector ) =>{\n    setMenuOpen(false)\n    await dispatch(setSector(sector));\n  }\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/analysis\"\n            component={RouterLink}\n          >\n            Analises\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/analysis/stocks\"\n            component={RouterLink}\n          >\n            Ações\n          </Link>\n          </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Todas as ações\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {sector?.label}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {sectorsList.map((t) => (\n            <MenuItem\n              key={t.key}\n              onClick={()=> handleSectorChange(t)}\n            >\n              {t.label}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    \n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Image = function Image(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n};\n\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default Image;","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink,useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  FormControlLabel,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Image as ImageIcon,\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\n\nconst categoryOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'dress',\n    name: 'Dress'\n  },\n  {\n    id: 'jewelry',\n    name: 'Jewelry'\n  },\n  {\n    id: 'blouse',\n    name: 'Blouse'\n  },\n  {\n    id: 'beauty',\n    name: 'Beauty'\n  }\n];\n\nconst avalabilityOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'available',\n    name: 'Available'\n  },\n  {\n    id: 'unavailable',\n    name: 'Unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'Creation date (newest first)'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Creation date (oldest first)'\n  }\n];\n\nfunction getStockTicker(stockTicker) {\n  // const map = {\n  //   in_stock: {\n  //     text: 'In Stock',\n  //     color: 'success'\n  //   },\n  //   out_of_stock: {\n  //     text: 'Out of Stock',\n  //     color: 'error'\n  //   },\n  //   limited: {\n  //     text: 'Limited',\n  //     color: 'warning'\n  //   }\n  // };\n\n  // const { text, color } = map[inventoryType];\n\n  return (\n    <Label color=\"success\">\n      {stockTicker}\n    </Label>\n  );\n}\n\nfunction applyFilters(stocks, query, filters) {\n  return stocks.filter((stock) => {\n    let matches = true;\n\n    // if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n    //   matches = false;\n    // }\n\n    // if (filters.category && product.category !== filters.category) {\n    //   matches = false;\n    // }\n\n    // if (filters.availability) {\n    //   if (filters.availability === 'available' && !product.isAvailable) {\n    //     matches = false;\n    //   }\n\n    //   if (filters.availability === 'unavailable' && product.isAvailable) {\n    //     matches = false;\n    //   }\n    // }\n\n    // if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\n    //   matches = false;\n    // }\n\n    // if (filters.isShippable && !product.isShippable) {\n    //   matches = false;\n    // }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  queryField: {\n    width: 500\n  },\n  categoryField: {\n    flexBasis: 200\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200\n  },\n  stockField: {\n    marginLeft: theme.spacing(2)\n  },\n  shippableField: {\n    marginLeft: theme.spacing(2)\n  },\n  imageCell: {\n    fontSize: 0,\n    width: 68,\n    flexBasis: 68,\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  image: {\n    height: 68,\n    width: 68\n  }\n}));\n\nfunction StocksList({ className, stocks, ...rest }) {\n  const classes = useStyles();\n  const [selectedStocks, setSelectedStocks] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const location = useLocation();\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllStocks = (event) => {\n    setSelectedStocks(event.target.checked\n      ? stocks.map((stock) => stock.id)\n      : []);\n  };\n\n  const handleSelectOneStocks = (event, stockId) => {\n    if (!selectedStocks.includes(stockId)) {\n      setSelectedStocks((prevSelected) => [...prevSelected, stockId]);\n    } else {\n      setSelectedStocks((prevSelected) => prevSelected.filter((id) => id !== stockId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n  \n\n  // Usually query is done on backend with indexing solutions\n  const filteredStocks = applyFilters(stocks, query, filters);\n  const paginatedStocks = applyPagination(filteredStocks, page, limit);\n  const enableBulkOperations = selectedStocks.length > 0;\n  const selectedSomeStocks = selectedStocks.length > 0 && selectedStocks.length < stocks.length;\n  const selectedAllStocks = selectedStocks.length === stocks.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.categoryField}\n            label=\"Category\"\n            name=\"category\"\n            onChange={handleCategoryChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            variant=\"outlined\"\n          >\n            {categoryOptions.map((categoryOption) => (\n              <option\n                key={categoryOption.id}\n                value={categoryOption.id}\n              >\n                {categoryOption.name}\n              </option>\n            ))}\n          </TextField>\n          <TextField\n            className={classes.availabilityField}\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {avalabilityOptions.map((avalabilityOption) => (\n              <option\n                key={avalabilityOption.id}\n                value={avalabilityOption.id}\n              >\n                {avalabilityOption.name}\n              </option>\n            ))}\n          </TextField>\n          <FormControlLabel\n            className={classes.stockField}\n            control={(\n              <Checkbox\n                checked={!!filters.inStock}\n                onChange={handleStockChange}\n                name=\"inStock\"\n              />\n            )}\n            label=\"In Stock\"\n          />\n          <FormControlLabel\n            className={classes.shippableField}\n            control={(\n              <Checkbox\n                checked={!!filters.isShippable}\n                onChange={handleShippableChange}\n                name=\"Shippable\"\n              />\n            )}\n            label=\"Shippable\"\n          />\n        </Box>\n      </Box> */}\n      {/* {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllProducts}\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )} */}\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell> */}\n                <TableCell />\n                <TableCell>\n                Código\n                </TableCell>\n                <TableCell>\n                  Nome\n                </TableCell>\n                <TableCell>\n                  Preço\n                </TableCell>\n                <TableCell>\n                  Preço Alvo/ Valuation\n                </TableCell>\n                <TableCell align=\"right\">\n                  Ações\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedStocks.map((stock) => {\n                const isStockSelected = selectedStocks.includes(stock.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={stock.id}\n                    selected={isStockSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isStockSelected}\n                        onChange={(event) => handleSelectOneStock(event, stock.id)}\n                        value={isStockSelected}\n                      />\n                    </TableCell> */}\n                    <TableCell className={classes.imageCell}>\n                      {stock.image ? (\n                        <img\n                          alt=\"Imagem ativo\"\n                          src={stock.image}\n                          className={classes.image}\n                        />\n                      ) : (\n                        <Box\n                          p={2}\n                          bgcolor=\"background.dark\"\n                        >\n                          <SvgIcon>\n                            <ImageIcon />\n                          </SvgIcon>\n                        </Box>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      {getStockTicker(stock.ticker)}\n                    </TableCell>\n                    <TableCell>\n                     {stock.name}\n                    </TableCell>\n                    <TableCell>\n                     {stock.price}\n                    </TableCell>\n                    <TableCell>\n                      {stock.valuation.value}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                       component={RouterLink}\n                       to={`${location.pathname}/${stock.ticker}`}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredStocks.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nStocksList.propTypes = {\n  className: PropTypes.string,\n  stocks: PropTypes.array\n};\n\nStocksList.defaultProps = {\n  stocks: []\n};\n\nexport default StocksList;\n","import React, {useState,useEffect,useCallback} from 'react'\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport Page from 'src/components/Page'\nimport StocksList from './StocksList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\nfunction StocksView(props) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [stocks, setStocks] = useState(null);\n\n  const getStocks = useCallback(() => {\n    axios\n      .get('/api/stocks/top-stocks')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setStocks(response.data.stocks);\n        }\n      })\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStocks();\n  }, [getStocks]);\n\n  if (!stocks) {\n    return null;\n  }\n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Ações\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        {stocks && (\n          <Box mt={3}>\n            <StocksList stocks={stocks} />\n          </Box>\n        )}\n      </Container>\n    </Page>\n  )\n}\n\nStocksView.propTypes = {\n\n}\n\nexport default StocksView\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to === -1 ? count : to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    inputProps: {\n      'aria-label': labelRowsPerPage\n    }\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"],"sourceRoot":""}