{"version":3,"sources":["hooks/useIsMountedRef.js","components/GenericMoreButton.js","utils/getInitials.js","components/SectorFilter.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/icons/GetApp.js","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/icons/PictureAsPdf.js","../node_modules/@material-ui/icons/ArchiveOutlined.js","utils/currency.js","models/stock.js","views/pages/Analysis/SentimentsView/SentimentsGraph/Chart.js","views/pages/Analysis/SentimentsView/SentimentsGraph/index.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/OpenInNew.js","views/pages/Analysis/Header.js","views/reports/DashboardView/LatestProjects.js","components/StackAvatars.js","views/pages/Analysis/StocksView/StocksPreview/StockPreviewItem.js","views/pages/Analysis/StocksView/StocksPreview/index.js","views/pages/Analysis/SentimentsView/SentimentsPreview/CircularProgress.js","views/pages/Analysis/SentimentsView/SentimentsPreview/index.js","views/pages/Analysis/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","menu","width","maxWidth","memo","props","classes","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","fontSize","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","className","transformOrigin","primary","name","replace","split","slice","map","v","toUpperCase","join","sectorsList","key","label","theme","root","actionIcon","marginRight","spacing","SectorFilter","dispatch","useDispatch","actionRef","sector","useSelector","state","analysis","isMenuOpen","setMenuOpen","setSector","handleSectorChange","a","Fragment","getContentAnchorEl","t","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","toCurrency","number","format","formated","isNaN","StockFundamentus","net_debt","pl","div_yield","growth_rate","data","isNull","this","StockValuation","status","Stock","ticker","category","date","price","href","color","colors","cyan","fundamentus","valuation","_id","setDataFromDB","toJSON","diff","getDiffPercentage","toFixed","diffPercentage","err","Chart","dataProp","rest","useTheme","datasets","dataset","borderWidth","borderColor","palette","background","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","display","layout","padding","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","divider","backgroundColor","dark","titleFontColor","text","bodyFontColor","secondary","footerFontColor","callbacks","tooltipItem","_data","index","item","textAlign","flexGrow","flexDirection","justifyContent","borderRight","SentimentsGraph","isMountedRef","sentiments","setSentiments","getSentiments","useCallback","axios","get","then","response","Card","clsx","CardHeader","Divider","Box","p","position","minHeight","i","Typography","variant","React","action","avatar","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutProperties","type","_extends","content","withStyles","alignItems","flex","alignSelf","marginTop","ListItemIcon","context","ListContext","alignItemsFlexStart","minWidth","active","flexShrink","Header","Grid","container","justify","Breadcrumbs","separator","aria-label","technology","height","marginLeft","navigateNextIcon","LatestProjects","paddingLeft","border","zIndex","more","red","common","white","StackAvatars","avatars","limit","lastIndex","avatarNodes","Tooltip","Avatar","src","length","push","defaultProps","viewButton","StockPreview","stock","location","useLocation","ListItem","xs","md","ListItemText","listItemText","primaryTypographyProps","noWrap","IconButton","RouterLink","to","pathname","StocksPreview","stocksPreview","setStocksPreview","getStocksPreview","Array","isArray","stocks","st","toPreview","List","StockPreviewItem","strokeDasharray","circle1","stroke","fill","strokeWidth","circle2","circleNegative","circleNeutral","CircularProgress","viewBox","image","subscriptions","fontWeight","typography","fontWeightMedium","green","SentimentsPreview","articlesSentiments","setArticlesSentiments","getArticlesSentiments","Table","TableBody","articleSentiments","TableRow","hover","id","TableCell","ml","source","mr","align","Button","size","paddingTop","paddingBottom","breakpoints","up","paddingRight","Analysis","Page","Container","createSvgIcon","TableSortLabel","_props$active","children","_props$direction","direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","icon","concat","capitalize","cursor","opacity","transition","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc"],"mappings":"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","file":"static/js/8.dad0bb4d.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Database as DatabaseIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSector } from 'src/actions/analysisActions';\n\n\nconst sectorsList = [\n  {\n    key: 'bank',\n    label: 'Setor Bancário'\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction SectorFilter({ className, ...rest }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const { sector } = useSelector(state => state.analysis)\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSector(sectorsList[0]));\n  }, [dispatch]);\n\n  const handleSectorChange = async (sector) => {\n    setMenuOpen(false)\n    await dispatch(setSector(sector));\n  }\n  return (\n    <React.Fragment>\n      <Button\n        ref={actionRef}\n        onClick={() => setMenuOpen(true)}\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          className={classes.actionIcon}\n        >\n          <DatabaseIcon />\n        </SvgIcon>\n        {sector?.label}\n      </Button>\n      <Menu\n        anchorEl={actionRef.current}\n        onClose={() => setMenuOpen(false)}\n        open={isMenuOpen}\n        PaperProps={{ className: classes.menu }}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {sectorsList.map((t) => (\n          <MenuItem\n            key={t.key}\n            onClick={() => handleSectorChange(t)}\n          >\n            {t.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nSectorFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SectorFilter;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.81.97H5.44l.8-.97zM5 19V8h14v11H5zm8.45-9h-2.9v3H8l4 4 4-4h-2.55z\"\n}), 'ArchiveOutlined');\n\nexports.default = _default;","import { isNaN } from \"lodash\"\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n  minimumFractionDigits: 2\n})\n\nexport const toCurrency = (number) =>{\n  if(typeof number == 'number'){\n    return formatter.format(number) \n  }else if(typeof number == 'string'){\n    const formated  = +number\n    if(!isNaN(formated)) return formatter.format(number)\n  }\n  return number\n}\n","import { isNaN, isNull } from \"lodash\"\nimport { toCurrency } from \"src/utils/currency\"\nimport { CURRENCY } from \"./app\"\nimport { colors } from '@material-ui/core';\nclass StockFundamentus {\n  net_debt = 0\n  pl = 0\n  div_yield = 0\n  growth_rate = 0\n  constructor() {\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.net_debt)) this.net_debt = data.net_debt\n      if (!isNull(data.pl)) this.pl = data.pl\n      if (!isNull(data.div_yield)) this.div_yield = data.div_yield\n      if (!isNull(data.growth_rate)) this.growth_rate = data.growth_rate\n    }\n  }\n  toJSON() {\n    let obj = {\n      net_debt: toCurrency(this.net_debt),\n      pl: toCurrency(this.pl),\n      div_yield: this.div_yield,\n      growth_rate: this.growth_rate\n    }\n    return obj\n  }\n}\nclass StockValuation {\n  value = 0\n  status\n  constructor() {\n\n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data.value)) this.value = data.value\n      if (!isNull(data.status)) this.status = data.status\n    }\n  }\n  toJSON() {\n    let obj = {\n      value: toCurrency(this.value),\n      status: this.status\n    }\n    return obj\n  }\n}\nexport class Stock {\n  _id\n  ticker = ''\n  category = ''\n  date = ''\n  price = 0\n  name = ''\n  href = 'app/analysis/stocks/'\n  color = colors.cyan['500']\n  fundamentus = new StockFundamentus()\n  valuation = new StockValuation()\n  constructor() {\n   \n  }\n  setDataFromDB(data) {\n    if (data) {\n      if (!isNull(data._id)) this._id = data._id\n      if (!isNull(data.ticker)) {\n        this.ticker = data.ticker\n        this.href += data.ticker\n      }\n      if (!isNull(data.name)) this.name = data.name\n      if (!isNull(data.category)) this.category = data.category\n      if (!isNull(data.date)) this.date = data.date\n      if (!isNull(data.price)) this.price = data.price\n      if (!isNull(data.fundamentus)){\n         this.fundamentus.setDataFromDB(data.fundamentus)\n        }\n      if (!isNull(data.valuation)) {\n        this.valuation.setDataFromDB(data.valuation)\n      }\n    }\n  }\n  toPreview() {\n    let obj = {\n      key: `item_${this._id}`,\n      name: this.name,\n      ticker: this.ticker,\n      href: this.href\n    }\n    return obj\n  }\n  toListItem() {\n    let obj = {\n      key: `item_${this._id}`,\n      name: this.name,\n      ticker: this.ticker,\n      href: this.href,\n      price: toCurrency(this.price),\n      valuation: this.valuation.toJSON()\n    }\n    return obj\n  }\n  toDetail() {\n    let obj = {\n      key: `item_${this._id}`,\n      name: this.name,\n      ticker: this.ticker,\n      href: this.href,\n      date: this.date,\n      price: toCurrency(this.price),\n      fundamentus: this.fundamentus.toJSON(),\n      valuation: this.valuation.toJSON(),\n      diff: {\n        value: this.getDiffPercentage(this.price,this.valuation.value),\n        label: `${this.getDiffPercentage(this.price,this.valuation.value).toFixed(2)}%`\n      }\n    }\n    return obj\n  }\n  getDiffPercentage(price,valuation){\n    try{\n      const diff = valuation - price\n      const diffPercentage = (diff / price) * 100\n      if(!isNaN(diff) && !isNaN(diffPercentage)) return diffPercentage\n      else return 0\n    }catch(err){\n      return 0\n    }\n    \n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nfunction Chart({ data: dataProp, ...rest }) {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(((dataset) => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    }))),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={options}\n      {...rest}\n    />\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction SentimentsGraph({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [sentiments, setSentiments] = useState(null);\n\n  const getSentiments = useCallback(() => {\n    axios\n      .get('/api/analysis/graph')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setSentiments(response.data.sentiments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSentiments();\n  }, [getSentiments]);\n\n  if (!sentiments) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Sentimento das noticias\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={sentiments} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {sentiments.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {sentiments.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nSentimentsGraph.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SentimentsGraph;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'OpenInNew');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SectorFilter from 'src/components/SectorFilter';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Análises\n          </Typography>\n        </Breadcrumbs>\n      </Grid>\n      <Grid item>\n        <SectorFilter />\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axiosMock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst technologyMap = {\n  'html-css': '/static/images/technologies/html.svg',\n  'react-js': '/static/images/technologies/react-js.svg',\n  'vue-js': '/static/images/technologies/vue-js.svg',\n  angular: '/static/images/technologies/angular.svg',\n  figma: '/static/images/technologies/figma.svg',\n  sketch: '/static/images/technologies/sketch.svg'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestProjects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    axios\n      .get('/api/reports/latest-projects')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProjects(response.data.projects);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Noticias\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Ação\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Setor\n                </TableCell>\n                <TableCell>\n                  Quantidade de noticias\n                </TableCell>\n                <TableCell>\n                  Têndencia\n                </TableCell>\n                <TableCell align=\"right\">\n                  Data Ultima noticia\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project) => (\n                <TableRow\n                  hover\n                  key={project.id}\n                >\n                  <TableCell>\n                    {project.title}\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      {/* <Avatar\n                        alt=\"Author\"\n                        className={classes.avatar}\n                        src={project.author.avatar}\n                      >\n                        {getInitials(project.author.name)}\n                      </Avatar> */}\n                      <Box ml={1}>\n                        {project.sector}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {project.amount}\n                  </TableCell>\n                  <TableCell>\n                    {project.tendency}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.background.default}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: colors.red[600],\n    color: colors.common.white\n  }\n}));\n\nfunction StackAvatars({\n  avatars,\n  limit,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  let lastIndex = 0;\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={++lastIndex}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Avatar\n        key={++lastIndex}\n        className={clsx(classes.avatar, classes.more)}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"subtitle2\"\n        >\n          +\n          {avatars.length - limit}\n        </Typography>\n      </Avatar>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  ListItem,\n  ListItemText,\n  IconButton,\n  Tooltip,\n  makeStyles,\n  Box,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport StackAvatars from 'src/components/StackAvatars';\nimport { Link as RouterLink,useLocation } from 'react-router-dom';\nimport axios from 'src/utils/axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction StockPreview({ stock, className, ...rest }) {\n  const classes = useStyles();\n  const location = useLocation();\n  return (\n    <ListItem\n      className={clsx(\n        classes.root,\n        className\n      )}\n      {...rest}\n    >\n      <Grid container >\n        <Grid item xs={4} md={7}>\n          <ListItemText\n            className={classes.listItemText}\n            primary={stock.name}\n            primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n            secondary={stock.ticker}\n          />\n        </Grid>\n\n\n        <Grid container spacing={2} xs={8} item md={5} alignItems=\"center\" justify=\"flex-end\">\n          {/* <Grid item >\n            <Typography\n              align=\"right\"\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n             Atual - {stock.price || 'R$42,00'} \n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color={\"textSecondary\"}\n            >\n              Justo -  <span className=\"secondary\"> { stock?.valuation?.value || 'R$21,00'}</span>\n            </Typography>\n          </Grid> */}\n          <Grid item>\n            <Tooltip title=\"Visualizar ação\">\n              <IconButton\n                component={RouterLink}\n                to={`${location.pathname}/stocks/${stock.ticker}`}\n                className={classes.viewButton}\n              >\n                <OpenInNewIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n\n        </Grid>\n      \n      </Grid>\n\n\n    </ListItem>\n  );\n}\n\nStockPreview.propTypes = {\n  className: PropTypes.string,\n  stock: PropTypes.object.isRequired\n};\n\nexport default StockPreview;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport StockPreviewItem from './StockPreviewItem';\nimport { Stock } from 'src/models/stock';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction StocksPreview({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [stocksPreview, setStocksPreview] = useState(null);\n\n\n  // const [stocks, setStocks] = useState(null);\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try{\n  //       let response = await axios.get('/analysis/stocks/')\n  //       console.log(response.data);\n  //       let docs = response.data\n  //       setArticles(docs)\n  //     }catch(err){\n  //       if(err.response){\n  //         console.error(\"Error response:\");\n  //         console.error(err.response);    // ***\n  //         console.error(err?.response?.status);  // ***\n  //         console.error(err?.response?.headers); // ***\n  //       }\n  //     }\n  //   }\n  //   fetchData();\n  // }, [])\n\n  const getStocksPreview = useCallback(() => {\n    axios\n      .get('/api/stocks/top-stocks')\n      .then((response) => {\n        if (isMountedRef.current) {\n          if(response.data && Array.isArray(response.data.stocks)){\n            const stocks = response.data.stocks.map((st)=>{\n              const stock = new Stock()\n              stock.setDataFromDB(st)\n              return stock.toPreview()\n            })\n            setStocksPreview(stocks);\n          }else{\n            return null\n          }\n        }\n      })\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStocksPreview();\n  }, [getStocksPreview]);\n\n  if (!stocksPreview) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Ações\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box >\n          <List>\n            {stocksPreview.map((stock, i) => (\n              <StockPreviewItem\n                divider={i < stocksPreview.length - 1}\n                key={stock.key}\n                stock={stock}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nStocksPreview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default StocksPreview;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: '#4b9e86',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  circleNegative: {\n    stroke: '#b658f5',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  circleNeutral: {\n    stroke: '#3d72eb',\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n}));\n\nfunction CircularProgress({ value, className, color, ...rest }) {\n  const classes = useStyles(value);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {color == 'neutral' ?\n        <svg viewBox=\"0 0 36 36\">\n          <path\n            className={classes.circle1}\n            d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n            strokeDasharray=\"100, 100\"\n          />\n          <path\n            className={classes.circleNeutral}\n            d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n            strokeDasharray={`${value}, 100`}\n          />\n        </svg>\n        : color == 'negative' ?\n          <svg viewBox=\"0 0 36 36\">\n            <path\n              className={classes.circle1}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"\n            />\n            <path\n              className={classes.circleNegative}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${value}, 100`}\n            />\n          </svg> :\n          <svg viewBox=\"0 0 36 36\">\n            <path\n              className={classes.circle1}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"\n            />\n            <path\n              className={classes.circle2}\n              d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${value}, 100`}\n            />\n          </svg>\n      }\n\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axiosMock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction SentimentsPreview({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const {sector } = useSelector(state=> state.analysis)\n  const [articlesSentiments, setArticlesSentiments] = useState(null);\n\n  const getArticlesSentiments = useCallback(() => {\n    axios\n      .get('/api/analysis/sentiments')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setArticlesSentiments(response.data.articlesSentiments);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getArticlesSentiments();\n  }, [getArticlesSentiments]);\n\n  if (!articlesSentiments) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Noticias\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box >\n          <Table>\n            <TableBody>\n              {articlesSentiments.map((articleSentiments) => (\n                <TableRow\n                  hover\n                  key={articleSentiments.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {articleSentiments.title}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {articleSentiments.source}\n                          </span>\n                        </Typography>\n                      </Box>\n                      <Box display=\"flex\" mr={2}>\n                        <Box  mr={2}>\n                          <Typography\n                            align=\"right\"\n                            variant=\"h6\"\n                            color=\"textPrimary\"\n                          >\n                            {articleSentiments.sentiments.label}\n                        </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            Sentimento\n                        </Typography>\n                        </Box>\n\n                        <CircularProgress value={100} color={ articleSentiments.sentiments.value == -1 ? 'negative' : articleSentiments.sentiments.value == 0 ? 'neutral' : 'positive'  } />\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to={`/app/analysis/sentiments/`}\n        >\n          Ver todas\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nSentimentsPreview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SentimentsPreview;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport LatestProjects from 'src/views/reports/DashboardView/LatestProjects';\nimport StocksPreview from './StocksView/StocksPreview';\nimport SentimentsPreview from './SentimentsView/SentimentsPreview';\nimport SentimentsGraph from './SentimentsView/SentimentsGraph';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction Analysis() {\n  const classes = useStyles();\n  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Análises\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          \n          <Grid\n            item\n            md={12}\n            xs={12}\n          >\n             <StocksPreview />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <SentimentsGraph />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <SentimentsPreview />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Analysis;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);"],"sourceRoot":""}